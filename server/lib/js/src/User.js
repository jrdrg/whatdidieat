// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var AwsSdk = require("aws-sdk");
var AwsLambda = require("@ahrefs/bs-aws-lambda/lib/js/src/awsLambda.bs.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Aws$Server = require("./Aws.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

Aws$Server.update("us-east-2", "http://localhost:8080");

function userIdFromUrl(parameters) {
  return Js_option.andThen((function (p) {
                return Js_primitive.undefined_to_opt(p["id"]);
              }), parameters === null ? /* None */0 : [parameters]);
}

function decodeBody(body) {
  if (body !== null) {
    return body;
  } else {
    return "";
  }
}

function okResult(body) {
  return AwsLambda.APIGatewayProxy[/* result */0](/* None */0, /* `Plain */[
              -675583510,
              JSON.stringify(body)
            ], 200, /* () */0);
}

function errorResult($staropt$star, message) {
  var statusCode = $staropt$star ? $staropt$star[0] : 500;
  return AwsLambda.APIGatewayProxy[/* result */0](/* None */0, /* `Plain */[
              -675583510,
              JSON.stringify({
                    message: message
                  })
            ], statusCode, /* () */0);
}

function queryStringParam($$event, paramName) {
  return Js_option.andThen((function (queryString) {
                return Js_primitive.undefined_to_opt(queryString[paramName]);
              }), Js_primitive.null_to_opt($$event.queryStringParameters));
}

function createUser($$event, _, _$1) {
  var body = decodeBody($$event.body);
  console.log(body);
  return Promise.resolve(/* () */0);
}

function listUsers($$event, context, callback) {
  var limit = Caml_format.caml_int_of_string(Js_option.getWithDefault("100", queryStringParam($$event, "limit")));
  console.log("event", $$event);
  console.log("context", context);
  return Aws$Server.DynamoDb[/* scan */1](/* Some */[limit], "WhatDidIEat", new (AwsSdk.DynamoDB.DocumentClient)()).then((function (users) {
                var match = users.Items;
                var result = (match == null) ? errorResult(/* None */0, "No users exist in the DB") : okResult(match);
                return Promise.resolve(Curry._2(callback, null, result));
              }));
}

function getUser($$event, _, callback) {
  console.log("Event", $$event);
  var match = userIdFromUrl($$event.pathParameters);
  if (match) {
    var userId = "User_" + match[0];
    return Aws$Server.DynamoDb[/* get */0]("WhatDidIEat", {
                    entity_id: userId,
                    related_entity_id: userId
                  }, new (AwsSdk.DynamoDB.DocumentClient)()).then((function (user) {
                    var match = user.Item;
                    var result = (match == null) ? errorResult(/* Some */[404], "No matching id found.") : okResult(match);
                    return Promise.resolve(Curry._2(callback, null, result));
                  })).catch((function (e) {
                  console.log("Error", e);
                  var errToResult = function (exn) {
                    return errorResult(/* None */0, exn.message);
                  };
                  return Promise.resolve(Curry._2(callback, null, errToResult(e)));
                }));
  } else {
    return Promise.resolve(Curry._2(callback, null, errorResult(/* Some */[404], "No id was provided")));
  }
}

exports.userIdFromUrl = userIdFromUrl;
exports.decodeBody = decodeBody;
exports.okResult = okResult;
exports.errorResult = errorResult;
exports.queryStringParam = queryStringParam;
exports.createUser = createUser;
exports.listUsers = listUsers;
exports.getUser = getUser;
/*  Not a pure module */
